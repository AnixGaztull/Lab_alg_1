В ходе данной лабораторной работы мы провели исследование трех алгоритмов, предназначенных для поиска элемента в матрице, отсортированной по вертикали и горизонтали.
Также мы сравнили время работы этих алгоритмов на различных наборах данных и построили соответствующие графики.
Итак, посмотрев на графики, можно понять, что:
1) На малых данных (примерно до 2**8) алгоритмы работают почти за одинаковое время.
2) При увеличении данных 2 алгоритм, использующий бинарный поиск (M*logN) начинает тратить намного больше времени (линий графика начинает стремительно расти) =>
2 алгоритм не следует использовать при очень больших данных.
3) Первый алгоритм, работающий за линейное время (N+M), начинает расти при приближении M к N (N=2**13), ведь именно при M >= 2**13 объем работы существенно увеличивается.
Данный алгоритм можно назвать хорошим, учитывая его легкость написания и время работы.
4) Третий алгоритм, использующий экспоненциальный поиск (M(logN-logM+1)) работает быстрее всех, особенно при очень больших данных.
Сравнив данные работы на разных данных, можно заметить, что алгоритм особенно эффективен при 2 данных,
где приходится много идти по 1 строке или 1 столбцу (все это благодаря экспоненциальному поиску, который очень эффективен для поиска в "длину").